{"ast":null,"code":"import _classCallCheck from \"/Users/oscargonzalez/Documents/GitHub/front-end-MH-new/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/oscargonzalez/Documents/GitHub/front-end-MH-new/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nvar Excel_Type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=UTF- ';\nvar Excel_Ext = '.xlsx';\nexport var ExporterService = /*#__PURE__*/(function () {\n  var ExporterService = /*#__PURE__*/function () {\n    function ExporterService() {\n      _classCallCheck(this, ExporterService);\n    }\n\n    _createClass(ExporterService, [{\n      key: \"exportToExcel\",\n      value: function exportToExcel(json, excelFileName) {\n        var worksheet = XLSX.utils.json_to_sheet(json);\n        var worbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        var excelBuffer = XLSX.write(worbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        }); //Llamamos el metodo de guardar\n\n        this.saveAsExcel(excelBuffer, excelFileName);\n      }\n    }, {\n      key: \"saveAsExcel\",\n      value: function saveAsExcel(buffer, fileName) {\n        var data = new Blob([buffer], {\n          type: Excel_Type\n        });\n        FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + Excel_Ext);\n      }\n    }]);\n\n    return ExporterService;\n  }();\n\n  ExporterService.ɵfac = function ExporterService_Factory(t) {\n    return new (t || ExporterService)();\n  };\n\n  ExporterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExporterService,\n    factory: ExporterService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExporterService;\n})();","map":null,"metadata":{},"sourceType":"module"}